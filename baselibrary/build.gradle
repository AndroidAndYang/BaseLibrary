apply plugin: 'com.android.library'
// 启用Jitpack插件
apply plugin: 'com.github.dcendents.android-maven'

/*repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}*/

// 设置Jitpack发布的Group
// group='com.gitee.yangguangzhao'
group='com.github.YangGuangz'
/*version = '1.0.4'*/

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    /*sourceSets {
        main.java.srcDirs += 'src/main/java'
        androidTest.java.srcDirs += 'src/androidTest/java'
        androidTest.resources.srcDirs += 'src/androidTest/res'
    }*/
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // Banner
    implementation 'com.youth.banner:banner:1.4.10'

    // 图片加载
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    // glide兼容
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    // glide-transformations
    implementation 'jp.wasabeef:glide-transformations:4.0.0'

    // 事件总线
    implementation 'org.greenrobot:eventbus:3.2.0'
    annotationProcessor "org.greenrobot:eventbus-annotation-processor:3.2.0"

    // 日志
    implementation 'com.orhanobut:logger:2.2.0'

    // 2020/4/15 3.1.2->3.1.3
    implementation 'com.github.yjfnypeu:UpdatePlugin:3.1.3'
}

/*
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/classes/release"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}*/
